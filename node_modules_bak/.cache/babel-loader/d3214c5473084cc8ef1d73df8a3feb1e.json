{"ast":null,"code":"// The result of dump.js is a big JSON tree\n// which can be easily serialized (for instance\n// to be sent from a webworker to the main app\n// or through Node's IPC), but we want\n// a (circular) DOM-like interface for walking\n// through the data. \nmodule.exports = function circularize(page) {\n  page.paragraphs = [];\n  page.lines = [];\n  page.words = [];\n  page.symbols = [];\n  page.blocks.forEach(function (block) {\n    block.page = page;\n    block.lines = [];\n    block.words = [];\n    block.symbols = [];\n    block.paragraphs.forEach(function (para) {\n      para.block = block;\n      para.page = page;\n      para.words = [];\n      para.symbols = [];\n      para.lines.forEach(function (line) {\n        line.paragraph = para;\n        line.block = block;\n        line.page = page;\n        line.symbols = [];\n        line.words.forEach(function (word) {\n          word.line = line;\n          word.paragraph = para;\n          word.block = block;\n          word.page = page;\n          word.symbols.forEach(function (sym) {\n            sym.word = word;\n            sym.line = line;\n            sym.paragraph = para;\n            sym.block = block;\n            sym.page = page;\n            sym.line.symbols.push(sym);\n            sym.paragraph.symbols.push(sym);\n            sym.block.symbols.push(sym);\n            sym.page.symbols.push(sym);\n          });\n          word.paragraph.words.push(word);\n          word.block.words.push(word);\n          word.page.words.push(word);\n        });\n        line.block.lines.push(line);\n        line.page.lines.push(line);\n      });\n      para.page.paragraphs.push(para);\n    });\n  });\n  return page;\n};","map":{"version":3,"sources":["/home/alice/Desktop/image-to-text/node_modules/tesseract.js/src/common/circularize.js"],"names":["module","exports","circularize","page","paragraphs","lines","words","symbols","blocks","forEach","block","para","line","paragraph","word","sym","push"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,IAArB,EAA0B;AACvCA,EAAAA,IAAI,CAACC,UAAL,GAAkB,EAAlB;AACAD,EAAAA,IAAI,CAACE,KAAL,GAAa,EAAb;AACAF,EAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AACAH,EAAAA,IAAI,CAACI,OAAL,GAAe,EAAf;AAEAJ,EAAAA,IAAI,CAACK,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAe;AAC/BA,IAAAA,KAAK,CAACP,IAAN,GAAaA,IAAb;AAEAO,IAAAA,KAAK,CAACL,KAAN,GAAc,EAAd;AACAK,IAAAA,KAAK,CAACJ,KAAN,GAAc,EAAd;AACAI,IAAAA,KAAK,CAACH,OAAN,GAAgB,EAAhB;AAEAG,IAAAA,KAAK,CAACN,UAAN,CAAiBK,OAAjB,CAAyB,UAASE,IAAT,EAAc;AACnCA,MAAAA,IAAI,CAACD,KAAL,GAAaA,KAAb;AACAC,MAAAA,IAAI,CAACR,IAAL,GAAYA,IAAZ;AAEAQ,MAAAA,IAAI,CAACL,KAAL,GAAa,EAAb;AACAK,MAAAA,IAAI,CAACJ,OAAL,GAAe,EAAf;AAEAI,MAAAA,IAAI,CAACN,KAAL,CAAWI,OAAX,CAAmB,UAASG,IAAT,EAAc;AAC7BA,QAAAA,IAAI,CAACC,SAAL,GAAiBF,IAAjB;AACAC,QAAAA,IAAI,CAACF,KAAL,GAAaA,KAAb;AACAE,QAAAA,IAAI,CAACT,IAAL,GAAYA,IAAZ;AAEAS,QAAAA,IAAI,CAACL,OAAL,GAAe,EAAf;AAEAK,QAAAA,IAAI,CAACN,KAAL,CAAWG,OAAX,CAAmB,UAASK,IAAT,EAAc;AAC7BA,UAAAA,IAAI,CAACF,IAAL,GAAYA,IAAZ;AACAE,UAAAA,IAAI,CAACD,SAAL,GAAiBF,IAAjB;AACAG,UAAAA,IAAI,CAACJ,KAAL,GAAaA,KAAb;AACAI,UAAAA,IAAI,CAACX,IAAL,GAAYA,IAAZ;AACAW,UAAAA,IAAI,CAACP,OAAL,CAAaE,OAAb,CAAqB,UAASM,GAAT,EAAa;AAC9BA,YAAAA,GAAG,CAACD,IAAJ,GAAWA,IAAX;AACAC,YAAAA,GAAG,CAACH,IAAJ,GAAWA,IAAX;AACAG,YAAAA,GAAG,CAACF,SAAJ,GAAgBF,IAAhB;AACAI,YAAAA,GAAG,CAACL,KAAJ,GAAYA,KAAZ;AACAK,YAAAA,GAAG,CAACZ,IAAJ,GAAWA,IAAX;AAEAY,YAAAA,GAAG,CAACH,IAAJ,CAASL,OAAT,CAAiBS,IAAjB,CAAsBD,GAAtB;AACAA,YAAAA,GAAG,CAACF,SAAJ,CAAcN,OAAd,CAAsBS,IAAtB,CAA2BD,GAA3B;AACAA,YAAAA,GAAG,CAACL,KAAJ,CAAUH,OAAV,CAAkBS,IAAlB,CAAuBD,GAAvB;AACAA,YAAAA,GAAG,CAACZ,IAAJ,CAASI,OAAT,CAAiBS,IAAjB,CAAsBD,GAAtB;AACH,WAXD;AAYAD,UAAAA,IAAI,CAACD,SAAL,CAAeP,KAAf,CAAqBU,IAArB,CAA0BF,IAA1B;AACAA,UAAAA,IAAI,CAACJ,KAAL,CAAWJ,KAAX,CAAiBU,IAAjB,CAAsBF,IAAtB;AACAA,UAAAA,IAAI,CAACX,IAAL,CAAUG,KAAV,CAAgBU,IAAhB,CAAqBF,IAArB;AACH,SApBD;AAqBAF,QAAAA,IAAI,CAACF,KAAL,CAAWL,KAAX,CAAiBW,IAAjB,CAAsBJ,IAAtB;AACAA,QAAAA,IAAI,CAACT,IAAL,CAAUE,KAAV,CAAgBW,IAAhB,CAAqBJ,IAArB;AACH,OA9BD;AA+BAD,MAAAA,IAAI,CAACR,IAAL,CAAUC,UAAV,CAAqBY,IAArB,CAA0BL,IAA1B;AACH,KAvCD;AAwCH,GA/CD;AAgDA,SAAOR,IAAP;AACH,CAvDD","sourcesContent":["// The result of dump.js is a big JSON tree\n// which can be easily serialized (for instance\n// to be sent from a webworker to the main app\n// or through Node's IPC), but we want\n// a (circular) DOM-like interface for walking\n// through the data. \n\nmodule.exports = function circularize(page){\n    page.paragraphs = []\n    page.lines = []\n    page.words = []\n    page.symbols = []\n\n    page.blocks.forEach(function(block){\n        block.page = page;\n\n        block.lines = []\n        block.words = []\n        block.symbols = []\n\n        block.paragraphs.forEach(function(para){\n            para.block = block;\n            para.page = page;\n\n            para.words = []\n            para.symbols = []\n            \n            para.lines.forEach(function(line){\n                line.paragraph = para;\n                line.block = block;\n                line.page = page;\n\n                line.symbols = []\n\n                line.words.forEach(function(word){\n                    word.line = line;\n                    word.paragraph = para;\n                    word.block = block;\n                    word.page = page;\n                    word.symbols.forEach(function(sym){\n                        sym.word = word;\n                        sym.line = line;\n                        sym.paragraph = para;\n                        sym.block = block;\n                        sym.page = page;\n                        \n                        sym.line.symbols.push(sym)\n                        sym.paragraph.symbols.push(sym)\n                        sym.block.symbols.push(sym)\n                        sym.page.symbols.push(sym)\n                    })\n                    word.paragraph.words.push(word)\n                    word.block.words.push(word)\n                    word.page.words.push(word)\n                })\n                line.block.lines.push(line)\n                line.page.lines.push(line)\n            })\n            para.page.paragraphs.push(para)\n        })\n    })\n    return page\n}"]},"metadata":{},"sourceType":"script"}
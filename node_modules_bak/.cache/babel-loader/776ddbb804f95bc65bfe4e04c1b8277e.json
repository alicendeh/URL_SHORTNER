{"ast":null,"code":"var _jsxFileName = \"/home/alice/Desktop/Reactjs clone/shortly/src/components/URLUpload/URLUpload.component.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { bg_shorten_desktop } from \"../../assets/images\";\nimport \"./URLUpload.style.css\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction URLUpload() {\n  _s();\n\n  const [link, setlink] = useState(\"\");\n  const [isEmpty, setisEmpty] = useState(false);\n  const [shortenedLink, setshortenedLink] = useState([]);\n  const [copied, setCopied] = useState(false);\n  useEffect(() => {\n    let exists = localStorage.getItem(\"EXISTS\");\n    let links = JSON.parse(localStorage.getItem(\"LINKS\"));\n\n    if (exists === null) {\n      setshortenedLink([]);\n    } else {\n      setshortenedLink([...links]);\n    }\n  }, []);\n\n  const shortenLink = async () => {\n    if (link === \"\") {\n      setisEmpty(true);\n    } else {\n      let res = await axios.get(`\n        https://api.shrtco.de/v2/shorten?url=${link}/very/long/link.html\n        `);\n      await setshortenedLink([...shortenedLink, {\n        fullLink: link,\n        shortenedLink: res.data.result.short_link\n      }]);\n      localStorage.setItem(\"LINKS\", JSON.stringify([...shortenedLink, {\n        fullLink: link,\n        shortenedLink: res.data.result.short_link\n      }]));\n\n      if (res.data) {\n        localStorage.setItem(\"EXISTS\", true);\n      }\n    }\n  };\n\n  const onChange = e => {\n    setlink(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"imgBackground\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: bg_shorten_desktop,\n          alt: \"\",\n          className: \"imgView\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: onChange,\n            value: link,\n            placeholder: \"shorten a link here...\",\n            className: isEmpty ? `placeholdered` : \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), isEmpty && /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"noLink\",\n            children: \"Please add a link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"myBtn\",\n            onClick: shortenLink,\n            children: \"Shorten It!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), shortenedLink.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shotenLinkContainer\",\n      children: shortenedLink.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whiteContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fullContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"full\",\n            children: /*#__PURE__*/_jsxDEV(LinesEllipsis, {\n              text: data.fullLink,\n              maxLine: \"1\",\n              ellipsis: \"...\",\n              trimRight: true,\n              basedOn: \"letters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myLine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"secondContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [data.shortenedLink, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: this.state.value,\n            onCopy: () => this.setState({\n              copied: true\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Copy \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(URLUpload, \"uhBa5o2TBXvSiZKePl4wqOdgTIE=\");\n\n_c = URLUpload;\nexport default URLUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"URLUpload\");","map":{"version":3,"sources":["/home/alice/Desktop/Reactjs clone/shortly/src/components/URLUpload/URLUpload.component.jsx"],"names":["axios","React","useState","useEffect","bg_shorten_desktop","LinesEllipsis","CopyToClipboard","URLUpload","link","setlink","isEmpty","setisEmpty","shortenedLink","setshortenedLink","copied","setCopied","exists","localStorage","getItem","links","JSON","parse","shortenLink","res","get","fullLink","data","result","short_link","setItem","stringify","onChange","e","target","value","length","map","index","state","setState"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { bg_shorten_desktop } from \"../../assets/images\";\nimport \"./URLUpload.style.css\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nfunction URLUpload() {\n  const [link, setlink] = useState(\"\");\n  const [isEmpty, setisEmpty] = useState(false);\n  const [shortenedLink, setshortenedLink] = useState([]);\n  const [copied, setCopied] = useState(false);\n\n  useEffect(() => {\n    let exists = localStorage.getItem(\"EXISTS\");\n    let links = JSON.parse(localStorage.getItem(\"LINKS\"));\n\n    if (exists === null) {\n      setshortenedLink([]);\n    } else {\n      setshortenedLink([...links]);\n    }\n  }, []);\n\n  const shortenLink = async () => {\n    if (link === \"\") {\n      setisEmpty(true);\n    } else {\n      let res = await axios.get(`\n        https://api.shrtco.de/v2/shorten?url=${link}/very/long/link.html\n        `);\n      await setshortenedLink([\n        ...shortenedLink,\n        {\n          fullLink: link,\n          shortenedLink: res.data.result.short_link,\n        },\n      ]);\n\n      localStorage.setItem(\n        \"LINKS\",\n        JSON.stringify([\n          ...shortenedLink,\n          {\n            fullLink: link,\n            shortenedLink: res.data.result.short_link,\n          },\n        ])\n      );\n      if (res.data) {\n        localStorage.setItem(\"EXISTS\", true);\n      }\n    }\n  };\n\n  const onChange = (e) => {\n    setlink(e.target.value);\n  };\n\n  return (\n    <div className=\"mainDiv\">\n      <div className=\"imgBackground\">\n        <div className=\"mainContainer\">\n          <img src={bg_shorten_desktop} alt=\"\" className=\"imgView\" />\n          <div className=\"inputContainer\">\n            <input\n              onChange={onChange}\n              value={link}\n              placeholder=\"shorten a link here...\"\n              className={isEmpty ? `placeholdered` : \"input\"}\n            />\n            {isEmpty && <i className=\"noLink\">Please add a link</i>}\n\n            <button className=\"myBtn\" onClick={shortenLink}>\n              Shorten It!\n            </button>\n          </div>\n        </div>\n      </div>\n      {shortenedLink.length > 0 && (\n        <div className=\"shotenLinkContainer\">\n          {shortenedLink.map((data, index) => (\n            <div className=\"whiteContainer\" key={index}>\n              <div className=\"fullContainer\">\n                <p className=\"full\">\n                  <LinesEllipsis\n                    text={data.fullLink}\n                    maxLine=\"1\"\n                    ellipsis=\"...\"\n                    trimRight\n                    basedOn=\"letters\"\n                  />\n                </p>\n              </div>\n              <div className=\"myLine\"></div>\n              <div className=\"secondContent\">\n                <p>{data.shortenedLink} </p>\n                {/* <button className={`myBtn enlarge`}>Copy</button> */}\n                <CopyToClipboard\n                  text={this.state.value}\n                  onCopy={() => this.setState({ copied: true })}\n                >\n                  <span>Copy </span>\n                </CopyToClipboard>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default URLUpload;\n"]},"metadata":{},"sourceType":"module"}